// <auto-generated />
using Albergue.Administrator.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Albergue.Administrator.Migrations
{
    [DbContext(typeof(AdministrationConsoleDbContext))]
    partial class AdministrationConsoleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Albergue.Administrator.Entities.CategoryEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = "4a28e665-a319-438c-952f-0a509e63ad85",
                            Name = "ALL"
                        });
                });

            modelBuilder.Entity("Albergue.Administrator.Entities.LanguageEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = "7cfc3035-360e-4a25-921b-124b239b1a7f",
                            Alpha2Code = "EN"
                        },
                        new
                        {
                            Id = "24276f81-dc5a-46c5-99a6-9e0364bbcd46",
                            Alpha2Code = "NL"
                        },
                        new
                        {
                            Id = "6792b645-08f6-44e1-b645-da42ad957fac",
                            Alpha2Code = "PT"
                        },
                        new
                        {
                            Id = "1a11331b-1158-45dc-9009-cdde6956e357",
                            Alpha2Code = "DE"
                        });
                });

            modelBuilder.Entity("Albergue.Administrator.Entities.ShopItemEntry", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ShopItems");
                });

            modelBuilder.Entity("Albergue.Administrator.Entities.ShopItemEntry", b =>
                {
                    b.HasOne("Albergue.Administrator.Entities.CategoryEntry", "Category")
                        .WithMany("ShopItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Albergue.Administrator.Entities.CategoryEntry", b =>
                {
                    b.Navigation("ShopItems");
                });
#pragma warning restore 612, 618
        }
    }
}
